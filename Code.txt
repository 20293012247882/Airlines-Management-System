package AirlinesManagementSystem;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;


public class AirlinesManagementSystem {
    private JFrame frame;
    private JPanel mainPanel;
    private JPanel inputPanel;
    private JButton addFlightButton;
    private JButton viewFlightButton;
    private JTextField flightNumberField;
    private JTextField departureField;
    private JTextField destinationField;
    private JTextField departureTimeField;
    private JTextField arrivalTimeField;
    private JTextField priceField;
    private JTextField seatField;
    private JComboBox<String> flightTypeComboBox; // Added combo box for flight type
    private DefaultTableModel tableModel;
    private JTable flightTable;
    private Map<String, Flight> flightRecords;

    public AirlinesManagementSystem() {
        frame = new JFrame("AirIndia Flights");
        frame.setSize(800, 500);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        mainPanel = new JPanel(new BorderLayout());
        mainPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

        inputPanel = new JPanel(new GridLayout(9, 2, 10, 5)); // Increased rows for the combo box

        flightRecords = new HashMap<>();

        flightNumberField = new JTextField(20);
        departureField = new JTextField(20);
        destinationField = new JTextField(20);
        departureTimeField = new JTextField(20);
        arrivalTimeField = new JTextField(20);
        priceField = new JTextField(20);
        seatField = new JTextField(20);
        flightTypeComboBox = new JComboBox<>(new String[]{"Local", "International"}); // Added combo box for flight type

        addFlightButton = new JButton("Add Flight");
        viewFlightButton = new JButton("View Flights");

        inputPanel.add(new JLabel("Flight Number:"));
        inputPanel.add(flightNumberField);
        inputPanel.add(new JLabel("Departure City:"));
        inputPanel.add(departureField);
        inputPanel.add(new JLabel("Destination City:"));
        inputPanel.add(destinationField);
        inputPanel.add(new JLabel("Departure Time:"));
        inputPanel.add(departureTimeField);
        inputPanel.add(new JLabel("Arrival Time:"));
        inputPanel.add(arrivalTimeField);
        inputPanel.add(new JLabel("Price(Per Seat):"));
        inputPanel.add(priceField);
        inputPanel.add(new JLabel("Seat:"));
        inputPanel.add(seatField);
        inputPanel.add(new JLabel("Flight Type:")); // Added label for flight type
        inputPanel.add(flightTypeComboBox); // Added combo box for flight type
        inputPanel.add(addFlightButton);
        inputPanel.add(viewFlightButton);

        mainPanel.add(inputPanel, BorderLayout.NORTH);

        tableModel = new DefaultTableModel();
        tableModel.addColumn("Flight Number");
        tableModel.addColumn("Departure City");
        tableModel.addColumn("Destination City");
        tableModel.addColumn("Departure Time");
        tableModel.addColumn("Arrival Time");
        tableModel.addColumn("Price(Per Seat)");
        tableModel.addColumn("Seat");
        tableModel.addColumn("Flight Type"); // Added column for flight type

        flightTable = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(flightTable);
        mainPanel.add(scrollPane, BorderLayout.CENTER);

        frame.add(mainPanel);
        frame.setVisible(true);

        // Add action listeners to text fields to move focus on pressing Enter
        flightNumberField.addActionListener(e -> departureField.requestFocusInWindow());
        departureField.addActionListener(e -> destinationField.requestFocusInWindow());
        destinationField.addActionListener(e -> departureTimeField.requestFocusInWindow());
        departureTimeField.addActionListener(e -> arrivalTimeField.requestFocusInWindow());
        arrivalTimeField.addActionListener(e -> priceField.requestFocusInWindow());
        priceField.addActionListener(e -> seatField.requestFocusInWindow());
        seatField.addActionListener(e -> flightTypeComboBox.requestFocusInWindow());
        flightTypeComboBox.addActionListener(e -> addFlightButton.doClick()); // Trigger add flight button on Enter

        addFlightButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String flightNumber = flightNumberField.getText();
                String departure = departureField.getText();
                String destination = destinationField.getText();
                String departureTime = departureTimeField.getText();
                String arrivalTime = arrivalTimeField.getText();
                double price = Double.parseDouble(priceField.getText());
                int seat = Integer.parseInt(seatField.getText());
                String flightType = (String) flightTypeComboBox.getSelectedItem(); // Retrieve selected flight type

                Flight flight = new Flight(flightNumber, departure, destination, departureTime, arrivalTime, price, seat, flightType);
                addFlight(flight);
            }
        });

        viewFlightButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                showFlights();
            }
        });
    }

    private void addFlight(Flight flight) {
        flightRecords.put(flight.getFlightNumber(), flight);
        updateTable();
        clearFields();
        JOptionPane.showMessageDialog(frame, "Flight added successfully!");
    }

    private void showFlights() {
        JTextArea textArea = new JTextArea();
        textArea.setEditable(false);
        textArea.append("Flight Schedule:\n\n");

        for (Flight flight : flightRecords.values()) {
            textArea.append("Flight Number: " + flight.getFlightNumber() + "\n");
            textArea.append("Departure City: " + flight.getDeparture() + "\n");
            textArea.append("Destination City: " + flight.getDestination() + "\n");
            textArea.append("Departure Time: " + flight.getDepartureTime() + "\n");
            textArea.append("Arrival Time: " + flight.getArrivalTime() + "\n");
            textArea.append("Price(Per Seat): $" + flight.getPrice() + "\n");
            textArea.append("Seat Available: " + flight.getSeat() + "\n");
            textArea.append("Flight Type: " + flight.getFlightType() + "\n\n");
        }

        JScrollPane scrollPane = new JScrollPane(textArea);
        scrollPane.setPreferredSize(new Dimension(400, 300));
        JOptionPane.showMessageDialog(frame, scrollPane, "Flight Schedule", JOptionPane.INFORMATION_MESSAGE);
    }

    private void updateTable() {
        tableModel.setRowCount(0);
        for (Flight flight : flightRecords.values()) {
            Vector<String> row = new Vector<>();
            row.add(flight.getFlightNumber());
            row.add(flight.getDeparture());
            row.add(flight.getDestination());
            row.add(flight.getDepartureTime());
            row.add(flight.getArrivalTime());
            row.add(String.valueOf(flight.getPrice()));
            row.add(String.valueOf(flight.getSeat()));
            row.add(flight.getFlightType()); // Add flight type to the table
            tableModel.addRow(row);
        }
    }

    private void clearFields() {
        flightNumberField.setText("");
        departureField.setText("");
        destinationField.setText("");
        departureTimeField.setText("");
        arrivalTimeField.setText("");
        priceField.setText("");
        seatField.setText("");
        flightTypeComboBox.setSelectedIndex(0); // Reset flight type combo box to default
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                new AirlinesManagementSystem();
            }
        });
    }
}

class Flight {
    private String flightNumber;
    private String departure;
    private String destination;
    private String departureTime;
    private String arrivalTime;
    private double price;
    private int seat;
    private String flightType; // Added flight type property

    public Flight(String flightNumber, String departure, String destination, String departureTime, String arrivalTime, double price, int seat, String flightType) {
        this.flightNumber = flightNumber;
        this.departure = departure;
        this.destination = destination;
        this.departureTime = departureTime;
        this.arrivalTime = arrivalTime;
        this.price = price;
        this.seat = seat;
        this.flightType = flightType;
    }

    public String getFlightNumber() {
        return flightNumber;
    }

    public String getDeparture() {
        return departure;
    }

    public String getDestination() {
        return destination;
    }

    public String getDepartureTime() {
        return departureTime;
    }

    public String getArrivalTime() {
        return arrivalTime;
    }

    public double getPrice() {
        return price;
    }

    public int getSeat() {
        return seat;
    }

    public String getFlightType() {
        return flightType;
    }
}